# -*- coding: utf-8 -*-

"""
    @Author 坦克手贝塔
    @Date 2023/6/13 20:17
"""
from typing import List

"""
把n个骰子扔在地上，所有骰子朝上一面的点数之和为s。输入n，打印出s的所有可能的值出现的概率。
你需要用一个浮点数数组返回答案，其中第 i 个元素代表这 n 个骰子所能掷出的点数集合中第 i 小的那个的概率。 

示例 1:
输入: 1
输出: [0.16667,0.16667,0.16667,0.16667,0.16667,0.16667]

示例 2:
输入: 2
输出: [0.02778,0.05556,0.08333,0.11111,0.13889,0.16667,0.13889,0.11111,0.08333,0.05556,0.02778]
"""
"""
思路：每一个骰子当做一轮，第一轮下来，出现的数字和分别是1-6；第二轮下来，在第一轮基础上2-12分别出现的次数，上一轮的1对第二轮的
2-7有贡献，依此类推。
"""


class Solution:
    @staticmethod
    def dicesProbability(n: int) -> List[float]:
        dp = [1 / 6] * 6
        for i in range(2, n + 1):
            tmp = [0] * (5 * i + 1)
            for j in range(len(dp)):
                for k in range(6):
                    tmp[j + k] += dp[j] / 6
            dp = tmp
        return dp
