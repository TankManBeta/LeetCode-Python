# -*- coding: utf-8 -*-

"""
    @Author 坦克手贝塔
    @Date 2023/9/26 11:22
"""
"""
n 个人站成一排，按从 1 到 n 编号。
最初，排在队首的第一个人拿着一个枕头。每秒钟，拿着枕头的人会将枕头传递给队伍中的下一个人。一旦枕头到达队首或队尾，传递方向就会改变，队伍会继续
沿相反方向传递枕头。
例如，当枕头到达第 n 个人时，TA 会将枕头传递给第 n - 1 个人，然后传递给第 n - 2 个人，依此类推。
给你两个正整数 n 和 time ，返回 time 秒后拿着枕头的人的编号。 

示例 1：
输入：n = 4, time = 5
输出：2
解释：队伍中枕头的传递情况为：1 -> 2 -> 3 -> 4 -> 3 -> 2 。
5 秒后，枕头传递到第 2 个人手中。

示例 2：
输入：n = 3, time = 2
输出：3
解释：队伍中枕头的传递情况为：1 -> 2 -> 3 。
2 秒后，枕头传递到第 3 个人手中。
"""
"""
思路：将 time 除以 n−1 得到枕头传递的轮数 k，然后再将 time 对 n−1 取余得到枕头在当前轮的剩余传递次数 mod。接下来我们判断当前的轮数 k：
如果 k 为奇数，那么枕头当前的传递方向是从队尾到队首，因此枕头会传递到编号为 n−mod 的人手中；如果 k 为偶数，那么枕头当前的传递方向是从队首到
队尾，因此枕头会传递到编号为 mod+1 的人手中。
"""


class Solution:
    @staticmethod
    def passThePillow(n: int, time: int) -> int:
        row = time // (n - 1)
        remain = time % (n - 1)
        if row % 2 == 0:
            return remain + 1
        else:
            return n - remain
